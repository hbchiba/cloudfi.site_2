const itemsPerPage=3;const maxPagesToShow=3;let currentPage=1;let data;let totalPages=0;const prevBtn=document.getElementById('prevBtn');const nextBtn=document.getElementById('nextBtn');const pages=document.getElementById('pages');const paginationResults=document.getElementById('pagination-results');async function fetchData(){if(!prevBtn&&!nextBtn)return;const response=await fetch('https://api.publicapis.org/entries');const test=await response.json();data=test.entries;totalPages=Math.ceil((data.length=33)/itemsPerPage);renderPage();renderPagination();}
function disablePrevBtn(){if(currentPage===1){prevBtn.classList.add('disabled');}else{prevBtn.classList.remove('disabled');}}
function disableNextBtn(){if(currentPage===totalPages){nextBtn.classList.add('disabled');}else{nextBtn.classList.remove('disabled');}}
function renderPage(){const start=(currentPage-1)*itemsPerPage;const end=start+itemsPerPage;const pageData=data.slice(start,end);pages.innerHTML='';pageData.forEach(item=>{const li=document.createElement('li');li.textContent=item;pages.appendChild(li);});const pageButtons=pages.querySelectorAll('button');pageButtons.forEach(button=>{if(button.textContent==currentPage){button.classList.add('active');}else{button.classList.remove('active');}});}
function renderPagination(){pages.innerHTML='';let startPage=1;let endPage=totalPages;if(currentPage>maxPagesToShow-1){startPage=currentPage-Math.floor(maxPagesToShow/2);endPage=currentPage+Math.floor(maxPagesToShow/2);if(endPage>totalPages){endPage=totalPages;startPage=totalPages-maxPagesToShow+1;}}else{endPage=maxPagesToShow;}
for(let i=startPage;i<=endPage;i++){const li=document.createElement('li');const button=document.createElement('button');button.textContent=i;button.addEventListener('click',()=>{currentPage=i;renderPage();renderPagination();});if(i===currentPage){button.classList.add('active');}
li.appendChild(button);pages.appendChild(li);}
disablePrevBtn();disableNextBtn();paginationResults.innerHTML='';const startIndex=(currentPage-1)*itemsPerPage+1;const endIndex=Math.min(startIndex+itemsPerPage-1,data.length);paginationResults.innerHTML=`Showing ${startIndex} - ${endIndex} of ${data.length} results`;}
if(prevBtn){prevBtn.addEventListener('click',()=>{if(currentPage>1){currentPage--;renderPage();renderPagination();}});}
if(nextBtn){nextBtn.addEventListener('click',()=>{if(currentPage<totalPages){currentPage++;renderPage();renderPagination();}});}
fetchData();